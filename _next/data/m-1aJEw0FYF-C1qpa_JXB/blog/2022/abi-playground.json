{"pageProps":{"postData":{"slug":["2022","abi-playground"],"contentRaw":"\n[ABI Playground](/abi-playground)\nis a tool that allows for quick and easy interacting with deployed contracts\nwithout a verified source.\n\nThis is what the interface looks like:\n\n![demo](/data/blog/2022/abi-playground/demo.png)\n\nYou can click on the **?-symbol** next to the title to **fill in the example** for you.\nIt enters in the contract address of TheDAO and a few functions as an example.\n\n![demo](/data/blog/2022/abi-playground/demo2.png)\n\nThe ABI-section allows you to **fetch the ABI from etherscan** if it's available or import common ABIs.\n\n![demo](/data/blog/2022/abi-playground/demo3.png)\n\nBelow that is where you can enter the functions that will be parsed for creating the ABI.\nHere, you can enter a full ABI in JSON format, or you can write function declarations yourself\nlike in the example.\n\n![demo](/data/blog/2022/abi-playground/demo4.png)\n\nThe _Functions_ section is generated automatically from the ABI.\nThe function's arguments are in between the parentheses along with their variable names if given.\nTo send a request, click on the function name.\n\nThe variables after the arrow are the returned variables.\nNote that, **only constant (i.e. non-state-modifying/view) functions will return data**.\n\n- _View_ functions are marked <span class='text-primary-400'>blue</span>\n- _State-modifying_ functions are marked <span class='text-orange-300'>orange</span>\n- _Payable_ functions are in <span class='text-red-400'>red</span>\n\nIn order to receive an output from a state-modifying function (orange and red) it needs to be called as static.\nThis can be simply done by changing the definition in the ABI, i.e. adding the _view_ declaration. Or this can be done in the\nLow-Level Call section.\n\n![demo](/data/blog/2022/abi-playground/demo5.png)\n\nBy clicking either the icon left to the function in the Function section,\nor by simply modifing arguments, the Low-Level Call data is updated.\nThis section shows the full transaction data that is submitted\nand can be modified. **It can therefore also be used for deploying contracts\nby copying the deployment bytecode or to simply execute raw bytecode**.\nThis can come handy for some of the [Ethernaut challenges](https://ethernaut.openzeppelin.com/).\n\n![demo](/data/blog/2022/abi-playground/demo6.png)\n\nThe response is decoded if any return values were specified.\nThe full data can be copied on the top. Individual values can be copied by\nclicking on the types to the left.\n\n[Try it out!](/abi-playground)\n","title":"ABI Playground","date":"2022-3-9","excerpt":"A tool for quickly interacting with deployed contracts. No ABI needed!"}},"__N_SSG":true}