{"pageProps":{"postData":{"slug":["blog","2022","cryptography"],"contentRaw":"\n_Notes taken from [An Introduction to Mathematical Cryptography](https://link.springer.com/book/10.1007/978-0-387-77993-5). Updated as I continue._\n\n# Table of Contents\n\n# 1. An Introduction to Cryptography\n\n## 1.2 Divisibility and greatest common divisors\n\n> **Definition.** Let $a, b \\in \\mathbb Z$ and $a \\neq 0$.\n> Then $a \\mid b$, i.e. $a$ divides $b$, if there exists $k \\in \\mathbb Z$ s.t.\n>\n> $$\n> b = ka\n> $$\n\n> **Proposition 1.4** Let $a, b, c \\in \\mathbb Z$\n>\n> - If $a \\mid b$ and $b \\mid c$ $\\implies$ $a \\mid c$\n> - If $a \\mid b$ and $b \\mid a$ $\\implies$ $a = \\pm b$\n> - If $a \\mid b$ and $a \\mid c$ $\\implies$ $a \\mid (a + c)$ and $a \\mid (b - c)$\n\n> **Definition.** The greatest _common divisor_ of $a$ and $b$ is the largest positive > integer $d$ such that $d \\mid a$ and $d \\mid b$.\n\n> **Definition.** (Division Algoritm) Let $a, b \\in \\mathbb Z$. Then $a$ divided by $b$ has > quotient $q$ and remainder $r$.\n>\n> $$\n> a = bq + r \\quad \\text{with } 0 \\leq r \\lt b\n> $$\n\nFrom this formula and proposition 1.4 we get\n\n$$\n\\gcd(a, b) = \\gcd(b, r)\n$$\n\nContinuing this process with $\\gcd(b, r) = \\gcd(r', r)$ we arrive at $\\gcd(s, 0) = s$ where $s = \\gcd(a, b)$.\n\n**Theorem 1.11** (Extended Euclidean Algorithm). Let $a, b \\in \\mathbb N$. Then\n\n$$\nau + bv = \\gcd(a, b) \\;, \\quad u, v \\in \\mathbb Z\n$$\n\nalways has a solution.\n\nIf $(u_0, v_0)$ is one solution, then every solution has the form\n\n$$\nu = u_0 + \\frac {bk} {\\gcd(a, b)}\n\\quad \\text{and} \\quad\nv = v_0 + \\frac {ak} {\\gcd(a, b)}\n\\quad \\text{for some } k \\in \\mathbb Z\n$$\n\n**Definition.** Let $a, b \\in \\mathbb Z$. We say that $a$ and $b$ are _relatively prime_ or _coprime_ if $\\gcd(a, b) = 1$.\n\nMore generally, any equation\n\n$$\nAu + Bv = \\gcd(A, B)\n$$\n\ncan be reduced to the case of relatively prime numbers by dividing both sides by $\\gcd(A, B)$.\n\n$$\n\\frac A {\\gcd(A, B)} u + \\frac B {\\gcd(A, B)} v = 1\n$$\n\n## 1.3 Modular arithmetic\n\n**Definition.** Let $m \\geq 1$ be an integer. We say that integers $a$ and $b$ are _congruent modulo m_ if their difference $a - b$ is divisible by $m$.\n\n$$\na \\equiv b \\pmod m\n$$\n\n**Proposition 1.13.** Let $m \\geq 1$ be an integer.\n\n(a) If $a_1 \\equiv a_2 \\pmod m$ and $b_1 \\equiv b_2 \\pmod m$, then\n\n- $a_1 \\pm b_1 \\equiv a_2 \\pm b_2 \\pmod m$\n- $a_1 \\cdot b_1 \\equiv a_2 \\cdot b_2 \\pmod m$\n\n(b) Let $a \\in \\mathbb Z$. Then\n\n$$\na \\cdot b \\equiv 1 \\pmod m \\quad \\text{for some integer $b$} \\iff \\gcd(a, m) = 1\n$$\n\n**Proof.**\n\n$\\implies:$\nAssume $g = \\gcd(a, m) \\neq 1$, then $g \\mid a$ and $g \\mid m$.\nNow let $b \\in \\mathbb Z$, then $ab = mk + r$.\nIt follows that $g \\mid (ab - mk)$ and thus $g \\mid r$. But if $g \\neq 1 \\mid r$, then $r \\neq 1$.\n\n$\\impliedby:$\nTheorem 1.11 says that $ab + mk = \\gcd(a, m) = 1$ has a solution for $b, k \\in \\mathbb Z$.\nBecause $ab - 1 = -mk$, $ab \\equiv 1 \\pmod m$.\n\n**Definition.** Numbers that have inverses modulo $m$ are called _units_.\n\n$$\n\\begin{aligned}\n(\\mathbb Z / m \\mathbb Z)^*\n&= \\{a \\in \\mathbb Z / m \\mathbb Z : \\gcd(a, m) = 1\\} \\\\\n&= \\{a \\in \\mathbb Z / m \\mathbb Z : a\\text{ has an inverse modulo }m\\}\n\\end{aligned}\n$$\n\nThe set $(\\mathbb Z / m \\mathbb Z)^*$ is called the _group of units modulo m_.\n\nIf $a_1$ and $a_2$ are units, then so is $a_1 a_2$.\nOn the other hand, if we add two units, we do not always get a unit.\n\n**Definition.** _Euler's phi function_ (or _Euler's totient function_) is the function $\\Phi(m)$ defined by\n\n$$\n\\Phi(m) = \\#(\\mathbb Z / m \\mathbb Z) ^* = \\# \\{ 0 \\leq a \\lt m: \\gcd(a, m) = 1\\} \\;.\n$$\n\n### 1.3.1 Modular arithmetic and shift ciphers\n\nEncryption:\n\n$$\nc \\equiv p + k \\pmod {26}\n$$\n\nDecryption:\n\n$$\np \\equiv c - k \\pmod {26}\n$$\n\n### 1.3.2 The fast powering algorithm\n\n$g^A \\pmod N$ can be computed by a succession of squarings and multiplications by using the binary expansion of the exponent, $A = A_0 + A_1 \\cdot 2^1 + \\cdots + A_r \\cdot 2^r$.\n\n_Example 1.19._\n\n$$\n3^{128}\n= 3^{2 + 2^3 + 2^4 + 2^6 + 2^7}\n= 3^{2^1} + 3^{2^3} + 3^{2^4} + 3^{2^6} + 3^{2^7}\n$$\n\n**Running Time.**\nIt takes at most $2r$ multiplications mod $N$ ($r$ multiplications for computing the squares and $r$ multiplications when computing the final result).\nBecause $A \\geq 2^r$, it takes at most $2\\log_2(A)$ multiplications to compute $g^A$.\nIf $A \\approx 2^{1000}$, this is about $2000$ multiplications.\n\n## 1.4 Prime numbers, unique factorization, and finite fields\n\n**Proposition 1.20.** Let $p$ be a prime number that divides the product $ab$ of two integers.\nThen $p$ divides at least one of $a$ and $b$.\nMore generally, if $p \\mid a_1a_2\\cdots a_n$, then $p$ divides at least one of the $a_i$.\n","title":"An Introduction to Mathematical Cryptography","date":"Mar 9, 2023","excerpt":"Notes taken from \"An Introduction to Mathematical Cryptography - Hoffstein\"","suptitle":"Jeffrey Hoffstein"}},"__N_SSG":true}