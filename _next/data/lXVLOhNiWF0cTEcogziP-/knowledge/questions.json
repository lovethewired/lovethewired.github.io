{"pageProps":{"postData":{"slug":["knowledge","questions"],"contentRaw":"# How do you approach an audit? How do you start and tackle an audit?\n\n# What tools do you use?\n\n# Do you know how slither works?\n\n# Do you know what an intermediate representation?\n\n# Do you know what fuzzing is?\n\n# Do you use fuzzing yourself?\n\n# What fuzzer do you use?\n\n# What is difficult about fuzzing?\n\n# What is something new that you have seen / been following?\n\n# What do you mean by automated defending / attacking systems?\n\n# What is the difference to Bitcoin?\n\n# What do you know about smart contracts on Bitcoin?\n\n# What is proof of work?\n\n# What is it for?\n\n# What happens if two blocks are proposed at the same time?\n\n# What can a block proposer decide on?\n\n# Can a block proposer censor transactions?\n\n# Can a block proposer change transaction data?\n\n# What about the block timestamp?\n\n# What happens if I change the block timestamp to 10 days in the future? What happens if I make the change in GETH?\n\n# What are uncle blocks?\n\n# Why is this incentive for uncle blocks in Ethereum but not Bitcoin?\n\n# Why do I have to spend gas for transactions?\n\n# What is re-entrancy?\n\n# Does it have to re-enter through the same function?\n\n# How would you detect these?\n\n# Can these be detected automatically?\n\n# How can you mitigate this?\n\n# Is every external call vulnerable to re-entrancy?\n\n# How would you check for overflow in a code base?\n\n# Can you explain overflow?\n\n# What is unchecked used for?\n\n# Is every overflow bad and needs to be flagged? Is every overflow critical?\n\n# How would you prevent overflow? How do you recommend guarding against it?\n\n# How can you test for overflow?\n\n# Where can gas limits for come into play?\n\n# Is always unlimited gas forwarded?\n\n# What is the 1/64 rule?\n\n# How would you prevent a unlimited storage array from grieving a contract?\n\n# Say it's used for a lookup, how would you mitigate the issue of an unbounded array?\n\n# What is ecrecover?\n\n# What are some pitfalls to look out for with ecrecover?\n\n# How do you prevent replays from happening across chains?\n\n# What do you think is cool about solidity?\n\n# What are some things to look out for with storage pointers?\n\n# What are some main mistakes that you see developers doing?\n\n# What is a flashloan?\n\n# Is there something controversial about flashloans?\n\n# Are flashloans a bug?\n\n# Could disallowing flashloans have prevented defi hacks?\n\n# What is an AMM?\n\n# How are assets priced in AMMs?\n\n# Does k ever change? Does it change during a swap?\n\n# What does it mean if k increases? Is it a bad thing?\n\n# Why does k increase over time?\n\n# Can it happen that you get a less optimal price for a swap?\n\n# What kind of risks exist for liquidity providers?\n\n# Can you explain impermanent loss?\n\n# What is there to look out for when dealing with ERC20 tokens as a protocol developer?\n\n# Do you need to check for code size before calling .transferFrom?\n\n# Do certain tokens need to be disallowed?\n\n# What is included in a transaction?\n\n# What is a nonce?\n\n# How does a contract know what function is being called?\n\n# Is there anything bad about the design? Could you improve it?\n\n# Can two functions have the same name?\n\n# Could function selectors include a return type?\n\n# Where can a variable be located in solidity's memory model?\n\n# How does create/create2 work?\n\n# Is there anything interesting that can happen with create2?\n\n# How can a upgradeable contract be created with this?\n\n# How can create2 be used to deploy different code at the same location?\n\n# What happens at a low level during create/constructor?\n\n# Is there anything wrong with checking address(this)?\n\n# What can you say about upgradeable contracts?\n\n# Can you have upgradeability without proxies?\n\n# Is there some other way of having upgradeability?\n\n# What is important to remember about upgradeable contracts?\n\n# What would you check in a contract audit that uses upgradeable contracts?\n\n# Is there something to be aware of during an upgrade from contract A to B?\n\n# How are arrays stored?\n\n# Does every opcode cost the same?\n\n# If you were trying to come up with the pricing for opcodes, how would you approach this?\n\n# What kind of hardware would you run these tests on?\n","date":"Invalid Date"}},"__N_SSG":true}