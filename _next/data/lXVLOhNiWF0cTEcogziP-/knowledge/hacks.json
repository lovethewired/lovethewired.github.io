{"pageProps":{"postData":{"slug":["knowledge","hacks"],"contentRaw":"\n# Name a common vulnerability.\n\n**Reentrancy:**\n- program control is handed over to external contract (typically through ether transfers, but also flashloans)\n- prevented through re-entrancy guards, checks-effects-patterns\n\n**Uninitialized Implementation:**\n- malicious takeover through calling `init()` on implementation contract\n- Parity-multisig hack: \"oops I killed it\". Possible through general contract execution\n- Wormhole 10M$ bounty\n- bricked all proxies that pointed to implementation\n- prevented by calling `init()` on implementation\n- OZ `_disableInitializers()` in constructor prevents `init() initializer` functions from being called\n- other `initializer` modifiers that check `code.length`\n\n# Explain a recent hack\n\n**Nomad's** cross-chain messaging protocol was attacked.\n\nInitializer allows for setting a `_committedRoot` after which message tree's history begins receiving updates and `confirmAt[_committedRoot]` is set to 1 so that message can be received and processed.\nDue to upgrading Replica at same time as Home is deployed, home contains no messages and has merkle root `bytes32(0)` and thus `confirmAt[0] = 1`.\n\nThis allowed unproven messages that hash to 0 i.e. `messages[_messageHash] = 0` to be falsely processed.\nPreviously the status of a message had to be explicitly set. The update was introduced to prevent valid messages being blocked by invalid attestations.\n\nAnyone could simply replay a malicious transaction.\n\n**BNB Bridge** IAVL tree hack. Multiple valid proofs generated by inserting empty nodes in the tree. Binance has a special precompile for verifying IAVL trees\n\n**Transit Swap** vulnerability due to unverified code and insufficient message checks that allowed arbitrary token transfers from users that gave permission.\n","title":"Hacks","date":"Invalid Date"}},"__N_SSG":true}