{"pageProps":{"postData":{"slug":["knowledge","blockchain"],"contentRaw":"\n# What is a blockchain?\n\n- Decentralized, public database managed through consensus (mining PoW, PoS)\n- Blockchain state is changed through addition of valid blocks through state transition function $s_t = T(s_{t-1}, tx)$\n- Block keeps track of hash of parent block, contain list of transactions\n- If data in block is changed, then all following blocks get changed (requires consensus)\n- Transactions must be cryptographically signed by key owners\n\n# What is Ethereum?\n\nEthereum is a decentralized, open, turing complete blockchain that supports smart contracts and recently moved from PoW to PoS. Ethereum is the second biggest blockchain by market cap after Bitcoin. It was conceived by Vitalik in 2013.\n\n# How does Ethereum differ from Bitcoin?\n\nCompared to Bitcoin which for the most part supports rudimentary balance exchange transactions, Ethereum could be seen as a platform for decentralized applications.\n\n|    | Bitcoin | Ethereum |\n| :--: | :--: | :--: |\n| Consensus | PoW | PoS |\n| Accounting | UTXO | Account based |\n| Block time | 10 minutes | 10-19s (PoS: 12s exactly) |\n| Block limit | 1MB | target: 15M gas (scalable up to 30M) |\n| Vision | \"digital gold\", stable, unchanging | open platform for decentralized apps and scaling solutions |\n\n# What is a UTXO/Account-based chain?\n\nUTXO (Unspent Transaction Output) and Account-based models are different accounting methods to determine coin ownerships.\n\nUTXO's represent unspent transaction outputs similar to IOU notes or cash that can only be spent once. When spending 50$ with a 100$ bill you give 100$ which gets converted to two 50$ bills and the spender and receiver each get one. The blockchain does not store absolute balance of sum of coins. Wallets need to keep track of UTXO notes. These can be combined and spent.\n\nAccount based models act similarly to bank accounts.\n\n| UTXO | Account-based |\n| :--: | :--: |\n| + higher degree of privacy | + less storage needed (no keeping track of notes + transaction doesn't require note to self returned) |\n| + scalable through sharding and parallel processing | - every node needs to store all account states |\n| - hard to work with global state (smart contracts) | + intuitive |\n|  | - unable to track notes from specific sources (i.e. blacklisting notes from hacks) |\n\n\n# What is a double spend? How is it prevented?\n\nIn ethereum accounts keep track of a nonce (number once) that is increased after every transaction. If a transaction has been previously recorded with the same nonce, the new one will be invalid.\n\n# What is a block?\n\n## Block header\n1. parent hash (of block header)\n2. Ommer's hash (uncle blocks)\n3. Beneficiary (coinbase)\n4. State Root - hash of root node of state trie\n5. Transactions Root - hash of root of transaction list\n6. Receipts Root - hash of receipts list (outcome: cum. gas, events bloom)\n7. Logs Bloom - bloom filter of indexable information\n8. Difficulty - computed from prev diff + timestamp\n9. Number\n10. Gas Limit - max gas per block \n11. Gas Used - cum. gas in block\n12. Timestamp\n13. Extra Data\n14. Mix Hash - verifies computation\n15. Nonce - 8 byte hash for computation verification ?","title":"What is a Blockchain?","date":"Invalid Date"}},"__N_SSG":true}